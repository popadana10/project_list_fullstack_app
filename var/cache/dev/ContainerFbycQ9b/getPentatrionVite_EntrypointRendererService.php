<?php

namespace ContainerFbycQ9b;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPentatrionVite_EntrypointRendererService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'pentatrion_vite.entrypoint_renderer' shared service.
     *
     * @return \Pentatrion\ViteBundle\Service\EntrypointRenderer
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/pentatrion/vite-bundle/src/Service/EntrypointRenderer.php';
        include_once \dirname(__DIR__, 4).'/vendor/pentatrion/vite-bundle/src/Service/TagRendererCollection.php';

        $a = ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container));

        if (isset($container->privates['pentatrion_vite.entrypoint_renderer'])) {
            return $container->privates['pentatrion_vite.entrypoint_renderer'];
        }

        return $container->privates['pentatrion_vite.entrypoint_renderer'] = new \Pentatrion\ViteBundle\Service\EntrypointRenderer(($container->privates['pentatrion_vite.entrypoints_lookup_collection'] ?? $container->load('getPentatrionVite_EntrypointsLookupCollectionService')), new \Pentatrion\ViteBundle\Service\TagRendererCollection(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            '_default' => ['privates', 'pentatrion_vite.tag_renderer[_default]', 'getPentatrionVite_TagRendererDefaultService', true],
        ], [
            '_default' => '?',
        ]), '_default'), false, 'link-tag', ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()), $a);
    }
}
